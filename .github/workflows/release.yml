on:
  push:
    tags:
      - "v*"

name: üì¶ Releases

jobs:
  test:
    name: "Testing"
    runs-on: ubuntu-latest
    environment: Test
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      APP_NAME: ${{ secrets.APP_NAME }}
      KEY: ${{ secrets.KEY }}
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: App Testing
        run: |
          npm install
          node ./scripts/secrets --write
          npm run test:e2e

  docker-stage:
    needs: test
    name: üê≥ Docker Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Fly Container Registry
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io/${{ secrets.FLY_APP_NAME }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: registry.fly.io/${{ secrets.FLY_APP_NAME }}:latest

  github-release:
    name: üêô Github Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
            node-version: "14"
      - name: Prepare Release
        run: |
          npm i
          npm run build
          sudo cp -R ./dist ./release
          sudo cp -R ./scripts ./release/scripts
          sudo cp ./package.json ./release/package.json
          sudo cp ./package-lock.json ./release/package-lock.json
          sudo zip -r release.zip release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            New Release ( ${{ github.ref }} )
          draft: false
          prerelease: false
      - name: Upload App Assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release-${{ github.ref }}.zip
          asset_content_type: application/zip
      - name: Create Release Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: "release/${{ github.ref }}"
  